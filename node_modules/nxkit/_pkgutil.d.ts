export declare type Optopns = Dict<string | string[]>;
/**
 * format part
 */
declare function resolvePathLevel(path: string, retain_up?: boolean): string;
/**
 * return format path
 */
declare function resolve(...args: string[]): string;
/**
 * @func is_absolute # 是否为绝对路径
 */
declare function isAbsolute(path: string): boolean;
/**
 * @func is_local # 是否为本地路径
 */
declare function isLocal(path: string): boolean;
declare function isLocalZip(path: string): boolean;
declare function isNetwork(path: string): boolean;
declare const _default: {
    fallbackPath: (url: string) => string;
    resolvePathLevel: typeof resolvePathLevel;
    resolve: typeof resolve;
    isAbsolute: typeof isAbsolute;
    isLocal: typeof isLocal;
    isLocalZip: typeof isLocalZip;
    isNetwork: typeof isNetwork;
    readonly options: Optopns;
    readonly config: Dict<any>;
    debug: boolean;
    cwd: () => string;
    chdir: (cwd: string) => boolean;
};
export default _default;
